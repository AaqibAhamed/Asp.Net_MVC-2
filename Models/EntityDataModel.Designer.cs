//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.ComponentModel.DataAnnotations;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("UniversitySystemModel", "FK_Courses_Lecturers_PK_LecturerId", "Lecturers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UniversitySystem.Models.Lecturer), "Courses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversitySystem.Models.Course), true)]
[assembly: EdmRelationshipAttribute("UniversitySystemModel", "FK_StudentsEnrollments_Courses_PK_CourseId", "Courses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversitySystem.Models.Course), "StudentsEnrollments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversitySystem.Models.StudentsEnrollment), true)]
[assembly: EdmRelationshipAttribute("UniversitySystemModel", "FK_StudentsEnrollments_Students_PK_StudentId", "Students", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversitySystem.Models.Student), "StudentsEnrollments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversitySystem.Models.StudentsEnrollment), true)]

#endregion

namespace UniversitySystem.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class UniversitySystemContextDb : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new UniversitySystemContextDb object using the connection string found in the 'UniversitySystemContextDb' section of the application configuration file.
        /// </summary>
        public UniversitySystemContextDb() : base("name=UniversitySystemContextDb", "UniversitySystemContextDb")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UniversitySystemContextDb object.
        /// </summary>
        public UniversitySystemContextDb(string connectionString) : base(connectionString, "UniversitySystemContextDb")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UniversitySystemContextDb object.
        /// </summary>
        public UniversitySystemContextDb(EntityConnection connection) : base(connection, "UniversitySystemContextDb")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Course> Courses
        {
            get
            {
                if ((_Courses == null))
                {
                    _Courses = base.CreateObjectSet<Course>("Courses");
                }
                return _Courses;
            }
        }
        private ObjectSet<Course> _Courses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lecturer> Lecturers
        {
            get
            {
                if ((_Lecturers == null))
                {
                    _Lecturers = base.CreateObjectSet<Lecturer>("Lecturers");
                }
                return _Lecturers;
            }
        }
        private ObjectSet<Lecturer> _Lecturers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Student> Students
        {
            get
            {
                if ((_Students == null))
                {
                    _Students = base.CreateObjectSet<Student>("Students");
                }
                return _Students;
            }
        }
        private ObjectSet<Student> _Students;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StudentsEnrollment> StudentsEnrollments
        {
            get
            {
                if ((_StudentsEnrollments == null))
                {
                    _StudentsEnrollments = base.CreateObjectSet<StudentsEnrollment>("StudentsEnrollments");
                }
                return _StudentsEnrollments;
            }
        }
        private ObjectSet<StudentsEnrollment> _StudentsEnrollments;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Courses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCourses(Course course)
        {
            base.AddObject("Courses", course);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lecturers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLecturers(Lecturer lecturer)
        {
            base.AddObject("Lecturers", lecturer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Students EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudents(Student student)
        {
            base.AddObject("Students", student);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StudentsEnrollments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudentsEnrollments(StudentsEnrollment studentsEnrollment)
        {
            base.AddObject("StudentsEnrollments", studentsEnrollment);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversitySystemModel", Name="Course")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Course : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Course object.
        /// </summary>
        /// <param name="courseId">Initial value of the CourseId property.</param>
        /// <param name="courseName">Initial value of the CourseName property.</param>
        /// <param name="courseCredit">Initial value of the CourseCredit property.</param>
        public static Course CreateCourse(global::System.Int32 courseId, global::System.String courseName, global::System.Int32 courseCredit)
        {
            Course course = new Course();
            course.CourseId = courseId;
            course.CourseName = courseName;
            course.CourseCredit = courseCredit;
            return course;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [ScaffoldColumn(false)]
        public global::System.Int32 CourseId
        {
            get
            {
                return _CourseId;
            }
            set
            {
                if (_CourseId != value)
                {
                    OnCourseIdChanging(value);
                    ReportPropertyChanging("CourseId");
                    _CourseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CourseId");
                    OnCourseIdChanged();
                }
            }
        }
        private global::System.Int32 _CourseId;
        partial void OnCourseIdChanging(global::System.Int32 value);
        partial void OnCourseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [DisplayName("Course Name")]
        [Required(ErrorMessage = "Course Names are required")]
        public global::System.String CourseName
        {
            get
            {
                return _CourseName;
            }
            set
            {
                OnCourseNameChanging(value);
                ReportPropertyChanging("CourseName");
                _CourseName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CourseName");
                OnCourseNameChanged();
            }
        }
        private global::System.String _CourseName;
        partial void OnCourseNameChanging(global::System.String value);
        partial void OnCourseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [DisplayName("Course Credit")]
        [Required(ErrorMessage = "CourseCredits are required")]
        public global::System.Int32 CourseCredit
        {
            get
            {
                return _CourseCredit;
            }
            set
            {
                OnCourseCreditChanging(value);
                ReportPropertyChanging("CourseCredit");
                _CourseCredit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseCredit");
                OnCourseCreditChanged();
            }
        }
        private global::System.Int32 _CourseCredit;
        partial void OnCourseCreditChanging(global::System.Int32 value);
        partial void OnCourseCreditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LecturerId
        {
            get
            {
                return _LecturerId;
            }
            set
            {
                OnLecturerIdChanging(value);
                ReportPropertyChanging("LecturerId");
                _LecturerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LecturerId");
                OnLecturerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LecturerId;
        partial void OnLecturerIdChanging(Nullable<global::System.Int32> value);
        partial void OnLecturerIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversitySystemModel", "FK_Courses_Lecturers_PK_LecturerId", "Lecturers")]
        public Lecturer Lecturer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lecturer>("UniversitySystemModel.FK_Courses_Lecturers_PK_LecturerId", "Lecturers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lecturer>("UniversitySystemModel.FK_Courses_Lecturers_PK_LecturerId", "Lecturers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lecturer> LecturerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lecturer>("UniversitySystemModel.FK_Courses_Lecturers_PK_LecturerId", "Lecturers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lecturer>("UniversitySystemModel.FK_Courses_Lecturers_PK_LecturerId", "Lecturers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversitySystemModel", "FK_StudentsEnrollments_Courses_PK_CourseId", "StudentsEnrollments")]
        public EntityCollection<StudentsEnrollment> StudentsEnrollments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudentsEnrollment>("UniversitySystemModel.FK_StudentsEnrollments_Courses_PK_CourseId", "StudentsEnrollments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudentsEnrollment>("UniversitySystemModel.FK_StudentsEnrollments_Courses_PK_CourseId", "StudentsEnrollments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversitySystemModel", Name="Lecturer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lecturer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lecturer object.
        /// </summary>
        /// <param name="lecturerId">Initial value of the LecturerId property.</param>
        /// <param name="lecturerName">Initial value of the LecturerName property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        public static Lecturer CreateLecturer(global::System.Int32 lecturerId, global::System.String lecturerName, global::System.String address)
        {
            Lecturer lecturer = new Lecturer();
            lecturer.LecturerId = lecturerId;
            lecturer.LecturerName = lecturerName;
            lecturer.Address = address;
            return lecturer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LecturerId
        {
            get
            {
                return _LecturerId;
            }
            set
            {
                if (_LecturerId != value)
                {
                    OnLecturerIdChanging(value);
                    ReportPropertyChanging("LecturerId");
                    _LecturerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LecturerId");
                    OnLecturerIdChanged();
                }
            }
        }
        private global::System.Int32 _LecturerId;
        partial void OnLecturerIdChanging(global::System.Int32 value);
        partial void OnLecturerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [DisplayName("Lecturer Name")]
        [Required(ErrorMessage = "Lecturer Name are required")]
        public global::System.String LecturerName
        {
            get
            {
                return _LecturerName;
            }
            set
            {
                OnLecturerNameChanging(value);
                ReportPropertyChanging("LecturerName");
                _LecturerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LecturerName");
                OnLecturerNameChanged();
            }
        }
        private global::System.String _LecturerName;
        partial void OnLecturerNameChanging(global::System.String value);
        partial void OnLecturerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Required(ErrorMessage = "Address are required")]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversitySystemModel", "FK_Courses_Lecturers_PK_LecturerId", "Courses")]
        public EntityCollection<Course> Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Course>("UniversitySystemModel.FK_Courses_Lecturers_PK_LecturerId", "Courses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Course>("UniversitySystemModel.FK_Courses_Lecturers_PK_LecturerId", "Courses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversitySystemModel", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="studentId">Initial value of the StudentId property.</param>
        /// <param name="studentName">Initial value of the StudentName property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static Student CreateStudent(global::System.Int32 studentId, global::System.String studentName, global::System.String address, global::System.String email)
        {
            Student student = new Student();
            student.StudentId = studentId;
            student.StudentName = studentName;
            student.Address = address;
            student.Email = email;
            return student;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [ScaffoldColumn(false)]
        public global::System.Int32 StudentId
        {
            get
            {
                return _StudentId;
            }
            set
            {
                if (_StudentId != value)
                {
                    OnStudentIdChanging(value);
                    ReportPropertyChanging("StudentId");
                    _StudentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudentId");
                    OnStudentIdChanged();
                }
            }
        }
        private global::System.Int32 _StudentId;
        partial void OnStudentIdChanging(global::System.Int32 value);
        partial void OnStudentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [DisplayName("Student Name")]
        [Required(ErrorMessage = "StudentName are required")]
        public global::System.String StudentName
        {
            get
            {
                return _StudentName;
            }
            set
            {
                OnStudentNameChanging(value);
                ReportPropertyChanging("StudentName");
                _StudentName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StudentName");
                OnStudentNameChanged();
            }
        }
        private global::System.String _StudentName;
        partial void OnStudentNameChanging(global::System.String value);
        partial void OnStudentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Required(ErrorMessage = "Address are required")]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Required(ErrorMessage = "Emails are required")]
        [RegularExpression("^[a-zA-Z0-9_\\.-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$", ErrorMessage = "E-mail is not valid")]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversitySystemModel", "FK_StudentsEnrollments_Students_PK_StudentId", "StudentsEnrollments")]
        public EntityCollection<StudentsEnrollment> StudentsEnrollments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudentsEnrollment>("UniversitySystemModel.FK_StudentsEnrollments_Students_PK_StudentId", "StudentsEnrollments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudentsEnrollment>("UniversitySystemModel.FK_StudentsEnrollments_Students_PK_StudentId", "StudentsEnrollments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversitySystemModel", Name="StudentsEnrollment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StudentsEnrollment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StudentsEnrollment object.
        /// </summary>
        /// <param name="enrollmentId">Initial value of the EnrollmentId property.</param>
        /// <param name="studentId">Initial value of the StudentId property.</param>
        /// <param name="courseId">Initial value of the CourseId property.</param>
        public static StudentsEnrollment CreateStudentsEnrollment(global::System.Int32 enrollmentId, global::System.Int32 studentId, global::System.Int32 courseId)
        {
            StudentsEnrollment studentsEnrollment = new StudentsEnrollment();
            studentsEnrollment.EnrollmentId = enrollmentId;
            studentsEnrollment.StudentId = studentId;
            studentsEnrollment.CourseId = courseId;
            return studentsEnrollment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EnrollmentId
        {
            get
            {
                return _EnrollmentId;
            }
            set
            {
                if (_EnrollmentId != value)
                {
                    OnEnrollmentIdChanging(value);
                    ReportPropertyChanging("EnrollmentId");
                    _EnrollmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EnrollmentId");
                    OnEnrollmentIdChanged();
                }
            }
        }
        private global::System.Int32 _EnrollmentId;
        partial void OnEnrollmentIdChanging(global::System.Int32 value);
        partial void OnEnrollmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentId
        {
            get
            {
                return _StudentId;
            }
            set
            {
                OnStudentIdChanging(value);
                ReportPropertyChanging("StudentId");
                _StudentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentId");
                OnStudentIdChanged();
            }
        }
        private global::System.Int32 _StudentId;
        partial void OnStudentIdChanging(global::System.Int32 value);
        partial void OnStudentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseId
        {
            get
            {
                return _CourseId;
            }
            set
            {
                OnCourseIdChanging(value);
                ReportPropertyChanging("CourseId");
                _CourseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseId");
                OnCourseIdChanged();
            }
        }
        private global::System.Int32 _CourseId;
        partial void OnCourseIdChanging(global::System.Int32 value);
        partial void OnCourseIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversitySystemModel", "FK_StudentsEnrollments_Courses_PK_CourseId", "Courses")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("UniversitySystemModel.FK_StudentsEnrollments_Courses_PK_CourseId", "Courses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("UniversitySystemModel.FK_StudentsEnrollments_Courses_PK_CourseId", "Courses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("UniversitySystemModel.FK_StudentsEnrollments_Courses_PK_CourseId", "Courses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("UniversitySystemModel.FK_StudentsEnrollments_Courses_PK_CourseId", "Courses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversitySystemModel", "FK_StudentsEnrollments_Students_PK_StudentId", "Students")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("UniversitySystemModel.FK_StudentsEnrollments_Students_PK_StudentId", "Students").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("UniversitySystemModel.FK_StudentsEnrollments_Students_PK_StudentId", "Students").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("UniversitySystemModel.FK_StudentsEnrollments_Students_PK_StudentId", "Students");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("UniversitySystemModel.FK_StudentsEnrollments_Students_PK_StudentId", "Students", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
